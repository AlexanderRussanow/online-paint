{"ast":null,"code":"var _jsxFileName = \"/Users/sa/Documents/project/paint/client/src/components/Canvas.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport \"../style/canvas.scss\";\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = observer(_c = _s(() => {\n  _s();\n\n  const canvasRef = React.useRef();\n  const usernameInput = React.useRef();\n  const [visibleModal, setVisibleModal] = React.useState(true);\n  const params = useParams();\n  React.useEffect(() => {\n    canvasState.setCanvas(canvasRef.current);\n    toolState.setTool(new Brush(canvasRef.current));\n  }, []);\n  React.useEffect(() => {\n    if (canvasState.username) {\n      const ws = new WebSocket(\"ws://localhost:5000/\");\n      canvasState.setWSocket(ws);\n      canvasState.setSession(params.id);\n      toolState.setTool(new Brush(canvasRef.current, ws, params.id));\n\n      ws.onopen = () => {\n        ws.send(JSON.stringify({\n          id: params.id,\n          username: canvasState.username,\n          method: \"CONNECTION\"\n        }));\n      };\n\n      ws.onmessage = event => {\n        let msg = JSON.parse(event.data);\n\n        switch (msg.method) {\n          case \"CONNECTION\":\n            console.log(`username ${msg.username} connected`);\n            break;\n\n          case \"DRAW\":\n            drawHandler(msg);\n            break;\n        }\n      };\n    }\n  }, [canvasState.username]);\n\n  const drawHandler = msg => {\n    const tool = msg.tool;\n    const context = canvasRef.current.getContext(\"2d\");\n\n    switch (tool.type) {\n      case \"brush\":\n        Brush.draw(context, tool.x, tool.y);\n    }\n  };\n\n  const mouseDownHandler = () => {\n    canvasState.pushToUndo(canvasRef.current.toDataURL());\n  };\n\n  const connectionHandler = () => {\n    canvasState.setUsername(usernameInput.current.value);\n    setVisibleModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: visibleModal,\n      onHide: () => {},\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Type your NickName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          autoFocus: true,\n          type: \"text\",\n          ref: usernameInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => connectionHandler(),\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      onMouseDown: () => mouseDownHandler(),\n      ref: canvasRef,\n      width: 1000,\n      height: 700\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}, \"z6YM9vv0iYkR1hjIT4URf+llPyw=\", false, function () {\n  return [useParams];\n}));\n_c2 = Canvas;\nexport default Canvas;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Canvas$observer\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"sources":["/Users/sa/Documents/project/paint/client/src/components/Canvas.jsx"],"names":["React","observer","canvasState","toolState","Brush","Modal","Button","useParams","Canvas","canvasRef","useRef","usernameInput","visibleModal","setVisibleModal","useState","params","useEffect","setCanvas","current","setTool","username","ws","WebSocket","setWSocket","setSession","id","onopen","send","JSON","stringify","method","onmessage","event","msg","parse","data","console","log","drawHandler","tool","context","getContext","type","draw","x","y","mouseDownHandler","pushToUndo","toDataURL","connectionHandler","setUsername","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport \"../style/canvas.scss\";\nimport canvasState from \"../store/canvasState\";\nimport toolState from \"../store/toolState\";\nimport Brush from \"../tools/Brush\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\n\nconst Canvas = observer(() => {\n  const canvasRef = React.useRef();\n  const usernameInput = React.useRef();\n  const [visibleModal, setVisibleModal] = React.useState(true);\n  const params = useParams();\n\n  React.useEffect(() => {\n    canvasState.setCanvas(canvasRef.current);\n    toolState.setTool(new Brush(canvasRef.current));\n   \n  }, []);\n\n  React.useEffect(() => {\n    if (canvasState.username) {\n      const ws = new WebSocket(\"ws://localhost:5000/\");\n      canvasState.setWSocket(ws);\n      canvasState.setSession(params.id);\n      toolState.setTool(new Brush(canvasRef.current, ws, params.id));\n      \n      ws.onopen = () => {\n        ws.send(\n          JSON.stringify({\n            id: params.id,\n            username: canvasState.username,\n            method: \"CONNECTION\",\n          })\n        );\n      };\n      ws.onmessage = (event) => {\n        let msg = JSON.parse(event.data);\n        switch (msg.method) {\n          case \"CONNECTION\":\n            console.log(`username ${msg.username} connected`);\n            break;\n          case \"DRAW\":\n            drawHandler(msg);\n            break;\n        }\n      };\n    }\n  }, [canvasState.username]);\n\n  const drawHandler = (msg) => {\n    const tool = msg.tool;\n    const context = canvasRef.current.getContext(\"2d\");\n    switch (tool.type) {\n      case \"brush\":\n        Brush.draw(context, tool.x, tool.y);\n    }\n  };\n\n  const mouseDownHandler = () => {\n    canvasState.pushToUndo(canvasRef.current.toDataURL());\n  };\n\n  const connectionHandler = () => {\n    canvasState.setUsername(usernameInput.current.value);\n    setVisibleModal(false);\n  };\n\n  return (\n    <div className=\"canvas\">\n      <Modal show={visibleModal} onHide={() => {}}>\n        <Modal.Header>\n          <Modal.Title>Type your NickName</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <input autoFocus type=\"text\" ref={usernameInput} />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => connectionHandler()}>\n            Log in\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <canvas\n        onMouseDown={() => mouseDownHandler()}\n        ref={canvasRef}\n        width={1000}\n        height={700}\n      ></canvas>\n    </div>\n  );\n});\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}